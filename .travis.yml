language: python
os: linux
sudo: required
dist: xenial

python:
    - 3.5
notifications:
    email: false
addons:
    apt:
        packages:
            - python3-sphinx
            - libevent-dev
cache:
    - pip: true
    - bundler: true
    - directories:
          - tests/simulate-chime/kotekan
          - $HOME/docker

services:
    - docker

before_install:
    - pip install pycodestyle
    - pip install pydocstyle
    # Load cached docker images
    - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi


install:
    - pip install .

script:
    # Run pycodestyle on all .py files in all subfolders
    - find . -type d \( -path ./docs -o -path ./kotekan \) -prune -o ! -name versioneer.py -name \*.py -exec pycodestyle --max-line-length=99 {} +

    # Run pydocstyle on all .py files
    - find . -type d \( -path ./docs -o -path ./kotekan \) -prune -o ! -name versioneer.py ! -name _version.py -name \*.py -exec pydocstyle --convention=numpy {} +

    # Build docs
    - cd docs
    - make html
    - cd ..

    # Simulate CHIME cluster
    - cd tests/simulate-chime
    # Build kotekan (cached repository)
    - if cd kotekan; then git pull; else git clone --single-branch --branch master https://github.com/kotekan/kotekan.git && cd kotekan; fi
    - cd build
    - cmake -DUSE_HDF5=ON ..
    - make -j 4
    - cd ../..
    - cp ../../kotekan/tools/docker/base.yaml .
    - cp ../../kotekan/tools/docker/Dockerfile .
    - docker-compose -f docker-compose.yaml up

before_cache:
    # Save tagged docker images
    - mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}' | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
